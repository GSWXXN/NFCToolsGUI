name: build

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'doc/**'
      - 'README*'
      - '.github/**'
  workflow_dispatch:

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest, macOS(ARM64) ]

    outputs:
      should_release: ${{ steps.whether_release.outputs.should_release }}

    steps:
      - name: Setup MSYS2 (Windows)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64

      - name: Clean up (macOS(ARM64))
        if: matrix.os == 'macOS(ARM64)'
        run: rm -rf *

      - uses: actions/checkout@v5
        with:
          submodules: 'recursive'

      - name: install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install autoconf automake libtool pkg-config

      - name: install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: sudo apt-get install liblzma-dev libreadline-dev

      - name: Compile core files (Unix)
        if: runner.os != 'Windows'
        run: sh ./compile.sh

      - name: Compile core files (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: sh ./compile.sh

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Compile GUI
        env:
          NFCTOOLSGUI_COMPILER: "Github Actions"
        run: npm run make

      - name: Find output files (Unix)
        if: runner.os != 'Windows'
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "output_files<<$EOF" >> $GITHUB_ENV
          find out/make/zip -name "*.zip" >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV

      - name: Find output files (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "output_files<<$EOF" >> $GITHUB_ENV
          find out/make/zip -name "*.zip" >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: NFCToolsGUI-${{ runner.os }}-${{ runner.arch }}
          path: ${{ env.output_files }}

      - name: Determine whether release
        id: whether_release
        if: matrix.os == 'ubuntu-latest'
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "should_release=true" >> $GITHUB_OUTPUT
          fi

  release:
    name: Release
    needs: build
    if: needs.build.outputs.should_release
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v4

      - name: Find zip files
        id: find-zip-files
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "articact_files<<$EOF" >> $GITHUB_ENV
          find . -name "*.zip" >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.head_commit.message }}
          files: ${{ env.articact_filesS }}
          generate_release_notes: true
          prerelease: true

      - uses: geekyeggo/delete-artifact@v2
        with:
          name: '*'
          failOnError: false
